name: Backend CI/CD

on:
  push:
    branches: [master]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'
  pull_request:
    branches: [master]
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Run linting
        run: |
          cd backend
          npm run lint:check

      - name: Run formatting check
        run: |
          cd backend
          npm run format:check

      - name: Run tests
        run: |
          cd backend
          npm test

      - name: Build TypeScript
        run: |
          cd backend
          npm run build

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Build and prepare for deployment
        run: |
          cd backend
          npm run build

      - name: Setup AWS SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: SAM Deploy
        run: |
          cd backend
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --parameter-overrides ParameterKey=OpenAIAPIKey,ParameterValue=${{ secrets.OPENAI_API_KEY }} ParameterKey=EmailPass,ParameterValue=${{ secrets.EMAIL_PASS }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}

      - name: Output API Gateway URL
        run: |
          cd backend
          sam list stack-outputs --stack-name ecoviz-serverless --region us-west-1

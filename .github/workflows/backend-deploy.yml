name: Backend CI/CD

on:
  push:
    branches: [ master ]
    paths:
      - 'backend/**'
      - 'shared/**'
      - '.github/workflows/backend-deploy.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'backend/**'
      - 'shared/**'

env:
  AWS_REGION: us-west-1

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          shared/package-lock.json

    - name: Install root dependencies
      run: npm ci

    - name: Install shared dependencies
      run: |
        cd shared
        npm ci

    - name: Install backend dependencies
      run: |
        cd backend
        npm ci

    - name: Run linting
      run: |
        cd backend
        npm run lint:check

    - name: Run formatting check
      run: |
        cd backend
        npm run format:check

    - name: Run tests
      run: |
        cd backend
        npm test

    - name: Build TypeScript
      run: |
        cd backend
        npx tsc

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          shared/package-lock.json

    - name: Setup Python for SAM CLI
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install SAM CLI
      run: |
        python -m pip install --upgrade pip
        pip install aws-sam-cli

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install dependencies
      run: |
        npm ci
        cd shared && npm ci
        cd ../backend && npm ci

    - name: Build backend
      run: |
        cd backend
        npm run build

    - name: SAM build
      run: |
        cd backend
        sam build

    - name: SAM deploy
      run: |
        cd backend
        sam deploy \
          --no-confirm-changeset \
          --no-fail-on-empty-changeset \
          --parameter-overrides ParameterKey=OpenAIAPIKey,ParameterValue="${{ secrets.OPENAI_API_KEY }}"

    - name: Get API Gateway URL
      run: |
        cd backend
        API_URL=$(aws cloudformation describe-stacks \
          --stack-name ecoviz-serverless \
          --query 'Stacks[0].Outputs[?OutputKey==`ApiGatewayEndpoint`].OutputValue' \
          --output text \
          --region ${{ env.AWS_REGION }})
        echo "Backend deployed successfully!"
        echo "API Gateway URL: $API_URL"